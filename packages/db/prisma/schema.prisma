// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id Int @id @default(autoincrement()) 
  username String @unique
  password String 
  moves Move[]
  gamesAsPlayer1 Game[] @relation("Player1")
  gamesAsPlayer2 Game[] @relation("Player2")
  createdAt DateTime @default(now())
}

model Game {
  game_id Int @id @default(autoincrement())
  game_state GameState @default(STARTED)
  player1_id Int
  player2_id Int
  player1 User @relation("Player1", fields: [player1_id], references: [id])
  player2 User @relation("Player2", fields: [player2_id], references: [id])
  gameResult GameResult
  moves Move[]
  createdAt DateTime @default(now())
}


model Move {
  move_id Int @id @default(autoincrement())
  game_id Int
  player_id Int
  move_number Int
  move_type MoveType
  game Game @relation(fields: [game_id], references: [game_id])
  player User @relation(fields: [player_id], references: [id])
  createdAt DateTime @default(now())
  
}
enum GameResult {
  PLAYER1_WINS
  PLAYER2_WINS
  DRAW
}

enum  GameState {
  STARTED
  ONGOING
  FINISHED
}

enum MoveType {
  ROCK
  PAPER
  SCISSORS
}